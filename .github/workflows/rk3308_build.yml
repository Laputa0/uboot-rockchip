name: Build u-boot for RK3308
run-name: u-boot ${{ inputs.uboot_ref }} for RK3308

on:
  workflow_dispatch:
    inputs:
      uboot_ref:
        description: Enter a u-boot git tag (or branch/commit)
        required: true
        default: v2025.04
        type: string
      use_arm_tf:
        description: Use ARM Trusted Firmware for BL31 (if unchecked, uses Rockchip BL31)
        required: true
        default: true
        type: boolean
      cherry_pick_commit:
        description: Enter u-boot commit(s) to cherry-pick (optional, comma-separated)
        required: false
        type: string

jobs:
  build:
    name: ${{ matrix.board.name }}
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        board:
          - name: rk3308-roc-cc
            config: roc-cc-rk3308_defconfig
            uart: 2
            iomux: 0
          - name: rk3308-rock-pi-s
            config: rock-pi-s-rk3308_defconfig
            uart: 0
            iomux: 0
          - name: rk3308-rock-s0
            config: rock-s0-rk3308_defconfig
            uart: 0
            iomux: 0
      fail-fast: true

    steps:
      - name: Toolchain
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu python3-pyelftools libgnutls28-dev
          aarch64-linux-gnu-gcc --version

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout rockchip rkbin
        uses: actions/checkout@v4
        with:
          repository: rockchip-linux/rkbin
          ref: master
          path: rkbin

      - name: Checkout ARM Trusted Firmware
        if: inputs.use_arm_tf
        uses: actions/checkout@v4
        with:
          repository: ARM-software/arm-trusted-firmware
          ref: master
          path: arm-trusted-firmware

      - name: Build BL31
        if: inputs.use_arm_tf
        run: |
          cd arm-trusted-firmware
          make PLAT=rk3328 bl31
          ls -l build/rk3328/release/bl31/bl31.elf

      - name: Checkout u-boot ${{ inputs.uboot_ref }}
        uses: actions/checkout@v4
        with:
          repository: u-boot/u-boot
          ref: ${{ inputs.uboot_ref }}
          path: u-boot

      - name: Cherry-pick commits
        if: inputs.cherry_pick_commit != ''
        run: |
          cd u-boot
          git fetch origin
          IFS=',' read -ra COMMITS <<< "${{ inputs.cherry_pick_commit }}"
          for COMMIT in "${COMMITS[@]}"; do
            git cherry-pick $(echo $COMMIT) || (echo "Cherry-pick failed for $COMMIT"; exit 1)
          done

      - name: "Configure and build u-boot config: ${{ matrix.board.config }}"
        run: |
          set -e
          DDR_BIN=rkbin/$(awk -F'=' '$1 == "[LOADER_OPTION]" {f=1; next} f && $1 == "FlashData" {print $2; exit}' rkbin/RKBOOT/RK3568MINIALL.ini)

          if test -n "${{ matrix.board.uart }}"; then
            sed -i "s/uart id=.*/uart id=${{ matrix.board.uart }}/" rkbin/tools/ddrbin_param.txt
          fi

          if test -n "${{ matrix.board.iomux }}"; then
            sed -i "s/uart iomux=.*/uart iomux=${{ matrix.board.iomux }}/" rkbin/tools/ddrbin_param.txt
          fi

          if test -n "${{ matrix.board.baudrate }}"; then
            sed -i "s/uart baudrate=.*/uart baudrate=${{ matrix.board.baudrate }}/" rkbin/tools/ddrbin_param.txt
          fi
          python3 rkbin/tools/ddrbin_tool.py rk3508 rkbin/tools/ddrbin_param.txt "$DDR_BIN"
          export ROCKCHIP_TPL=../$DDR_BIN
          if [ "${{ inputs.use_arm_tf }}" = "true" ]; then
            export BL31=../arm-trusted-firmware/build/rk3328/release/bl31/bl31.elf
          else
            export BL31=../rkbin/$(awk -F'=' '$1 == "[BL31_OPTION]" {f=1; next} f && $1 == "PATH" {print $2; exit}' rkbin/RKTRUST/RK3308TRUST.ini)
          fi
          cd u-boot
          make mrproper
          make ${{ matrix.board.config }}
          make -j$(nproc) KCFLAGS="-Werror"
          tools/mkimage -l u-boot.itb
          mkdir -p ../output/${{ matrix.board.name }}/base-files
          cp idbloader*.img u-boot.itb ../output/${{ matrix.board.name }}/base-files/ 2>/dev/null || true
          cp u-boot-rockchip*.bin ../output/${{ matrix.board.name }}/ 2>/dev/null || true
          cp ../../uboot-rockchip/readme.txt ../output/${{ matrix.board.name }}/
          cd ../output/${{ matrix.board.name }}
          sha256sum u-boot-rockchip*.bin > sha256sums.txt 2>/dev/null || true
          cd base-files
          sha256sum idbloader*.img u-boot.itb > sha256sums.txt 2>/dev/null || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.board.name }}
          path: output/
          if-no-files-found: error
